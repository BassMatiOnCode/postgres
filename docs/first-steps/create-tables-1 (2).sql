\echo --- Creating table ProductCategory
CREATE TABLE if not exists productcategory (
	id integer PRIMARY KEY generated by default as identity ,
	rg integer not null default 0,
	name varchar(20) not null default '' ,
	description text not null default '' 
	) ;
COMMENT on table ProductCategory is 'A lookup table for product categories' ; 
COMMENT on column productcategory.id is 'A single-field primary key is alsways named "ID". Use the column name in combination with the table name (tableName.id) in queries.' ;
COMMENT on column ProductCategory.RG is 'The row generation counter RG is used for simplified concurrent update conflict detection. The value is automatically incremented in an update trigger function.' ;
COMMENT on column ProductCategory.name is 'A short name of the product category.' ;
COMMENT on column ProductCategory.description is 'A longer description may help a user to choose the right product category.' ;

\echo --- Creating table Customer
CREATE TABLE if not exists customer (
	id integer PRIMARY KEY generated by default as identity ,
	rg integer not null default 0,
	key char(5) unique not null,
	name varchar(50) not null default '' ,
	contactname varchar(30) not null default '' ,
	contacttitle varchar(30) not null default '' ,
	address varchar(50) not null default '' ,
	city varchar(30) not null default '' ,
	region varchar(30) not null default '' ,
	postalcode varchar(10) not null default '' ,
	country varchar(30) not null default '' ,
	phone varchar(20) not null default '' ,
	fax varchar(20) not null default '' 
	) ;
COMMENT on table ProductCategory is 'Stores customer contact and address data' ; 

\echo --- Creating table Employee
CREATE TABLE if not exists employee (
	id integer PRIMARY KEY generated by default as identity ,
	rg integer not null default 0,
	lastname varchar(20) not null default '' ,
	firstname varchar(20) not null default '' ,
	title varchar(30) not null default '' ,
	titleofcourtesy varchar(20) not null default '' ,
	birthdate DATE , 
	hiredate DATE , 
	address varchar(50) not null default '' ,
	city varchar(20) not null default '' ,
	region varchar(30) not null default '' ,
	postalcode varchar(10) not null default '' ,
	country varchar(20) not null default '' ,
	homephone varchar(20) not null default '' ,
	extension varchar(5) not null default '' ,
	notes text not null default '' ,
	reportingparentid integer not null default 0 references employee( id )
	) ;
INSERT into Employee ( id, lastName, notes ) values ( 0, 'nobody', 'Use this record for employees that don''t report to anybody' );

\echo --- Creating table Carrier
CREATE TABLE if not exists carrier (
	id integer PRIMARY KEY generated by default as identity ,
	rg integer not null default 0,
	name varchar(20) not null default '' ,
	phone varchar(20) not null default ''
	) ;

\echo --- Creating table CustomerOrder
CREATE TABLE if not exists customerorder (
    id integer PRIMARY KEY generated by default as identity ,
	rg integer not null default 0,
    customerid integer not null REFERENCES customer (id) on update cascade ,
    employeeid integer not null REFERENCES employee (id) on update cascade ,
	orderdate date ,
	requireddate date ,
	shippeddate date ,
	carrierid integer not null default 0 references carrier (id) ,
	shippingcost money not null default 0, 
	destname varchar (50) not null default '' ,
	destaddress varchar (50) not null default '' ,
	destcity varchar (30) not null default '' ,
	destregion varchar(30) not null default '' ,
	destpostalcode varchar (10) not null default '' ,
	destcountry varchar (20) not null default '' 
    ) ;
COMMENT on table CustomerOrder is 'Defines a customer order and records its state.' ; 

\echo -- Creating table Supplier
CREATE TABLE if not exists supplier (
	id integer PRIMARY KEY generated by default as identity ,
	rg integer not null default 0,
	name varchar(50) not null default '' ,
	contactname varchar(30) not null default '' ,
	contacttitle varchar(30) not null default '' ,
	address varchar(50) not null default '' ,
	city varchar(30) not null default '' ,
	region varchar(30) not null default '' ,
	postalcode varchar(10) not null default '' ,
	country varchar(20) not null default '' ,
	phone varchar(20) not null default '' ,
	fax varchar(20) not null default '' ,
	homepage varchar(100) not null default ''
	) ;

\echo --- Creating table Product
CREATE TABLE if not exists product (
	id integer PRIMARY KEY generated by default as identity ,
	rg integer not null default 0,
	name varchar(50) not null default '' ,
	supplierid integer not null references supplier( id ) on update cascade ,
	productcategoryid integer not null references productcategory( id ) on update cascade ,
	unitquantity varchar (30) not null default '' ,
	unitprice money not null default 0 ,
	unitsinstock real not null default 0.0 ,
	unitsonorder real not null default 0.0 ,
	reorderlevel real not null default 0.0 ,
	discontinued integer not null default 0
	) ;

\echo --- Creating table CustomerOrderItem
CREATE TABLE if not exists customerorderitem (
	orderid integer not null REFERENCES customerOrder( id ) on update cascade on delete cascade,
	productid integer not null REFERENCES product( id ) on update cascade ,
	PRIMARY KEY ( orderid, productid ) ,
	rg integer not null default 0,
	unitprice money not null default 0 ,
	discount money not null default 0 ,
	quantityordered REAL not null default 0 ,
	quantitydelivered REAL not null default 0 
	) ;

\echo --- Creating table Region
CREATE TABLE if not exists region (
	id integer PRIMARY KEY generated by default as identity ,
	rg integer not null default 0,
	name varchar(20) not null default '' 
	) ;

\echo --- Creating table Territory
CREATE TABLE if not exists territory (
	id integer PRIMARY KEY generated by default as identity ,
	rg integer not null default 0,
	key varchar(8) unique not null default '' ,
	name varchar(20) not null default '' ,
	regionid integer not null default 0 references region( id )
	) ;

\echo --- Creating table EmployeeTerritory
CREATE TABLE IF NOT EXISTS employeeterritory (
	employeeid integer not null references employee( id ) ,
	territoryid integer not null references territory( id ) ,
	rg INTEGER not null default 0,
	primary key ( employeeid, territoryid )
	) ;
