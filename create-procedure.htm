<!DOCTYPE html>
<html lang="en-US"><head>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="template-info" file-name="empty.htm"version="2021-08-23" editor-name="usp" />
<meta name="author" content="usp" />
<meta name="creation-date" content="2021-12-20" />
<meta name="editor" content="usp" />
<meta name="change-date" content="2021-12-20" />
<meta name="version" content="1" />
<meta name="categories" content="Programming > Databases > Postgres" />
<meta name="tags" content="programming, database, postgres, type, dynamic, sql" />
<meta name="description" content="Stored procedures and functions." />

<link rel="stylesheet" href="/inc/page.css" />
 
<title>Postgres - Stored Frocedures and Functions</title>

</head><body><div id="page-header"></div><div id="main-toolbar"></div><div id="content">

<h1>Frocedures and Functions</h1>

<p id="page-abstract"></p>

<p></p>

<!--<figcaption class="listing"></figcaption>

<pre>

</pre>
-->

<pre>
class FieldUpdateInfo {
	columnName::string ,
	originalValue::any ,
	proposedValue::any ,
	currentValue::any
	}

function genericRowUpdate ( tableName, rowID, updateInfo::[FieldUpdateInfo] ) { 
	tableName = escapeTableName( tableName );
	let fieldNames = findUpdateColumns( updateInfo );
	let s = "UPDATE " + escapeTableName( tableName ); 
	for ( let i = 0 ; i < updateInfo.length ; i ++ ) {
		if ( typeof updateInfo[ i ].proposedValue !== "undefined" ) s += " " + updateInfo[ i ].columnName + " = " 
		}
	let result = db.executeQuery( `Update {tableName} ` );
	
	}
</pre>

</div><script type="module" src="/inc/page.js" ></script></body></html>